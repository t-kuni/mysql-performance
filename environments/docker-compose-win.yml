version: '3'
services:
  db:
    container_name: XXXX-db
    build: db
    volumes:
      - db-data:/var/lib/mysql
    ports:
      - "33060:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
      - MYSQL_DATABASE=${DB_DATABASE}
    restart: always

  app:
    container_name: XXXX-app
    build:
      context: app
      args:
        - APP_UID=${APP_UID}
        - APP_GID=${APP_GID}
    restart: always
    volumes:
      - app-code:/var/www/app

  workspace:
    container_name: XXXX-app-workspace
    build:
      context: workspace
      args:
        - APP_UID=${APP_UID}
        - APP_GID=${APP_GID}
    command: node -v
    volumes:
      - app-code:/var/www/app

  scheduler:
    container_name: XXXX-scheduler
    build:
      context: app
      args:
        - APP_UID=${APP_UID}
        - APP_GID=${APP_GID}
    user: "root:root"
    entrypoint:
      - "crond"
      - "-f"
      - "-l"
      - "8"
      - "-L"
      - "/dev/stdout"
    volumes:
      - app-code:/var/www/app
    restart: always

  web:
    container_name: XXXX-web
    build:
      context: web
      args:
        - APP_UID=${APP_UID}
        - APP_GID=${APP_GID}
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - app-code:/var/www/app
      - ./certs:/etc/certs:ro
    depends_on:
      - app
    networks:
      default:
        aliases:
          - local.XXXX.com
    restart: always

  kvs:
    container_name: XXXX-kvs
    build: kvs
    restart: always

  mta:
    container_name: XXXX-mta
    image: mailhog/mailhog
    ports:
      - "8025:8025"
      - "1025:1025"
    restart: always

  db-viewer:
    container_name: XXXX-db-viewer
    image: phpmyadmin/phpmyadmin:5.1.0
    ports:
      - 8080:80
    environment:
      - PMA_ARBITRARY=1
      - PMA_HOST=db
      - PMA_USER=root
      - PMA_PASSWORD=${DB_PASSWORD}
    restart: always

  unison:
    container_name: XXXX-unison
    image: onnimonni/unison
    environment:
      - UNISON_DIR=/var/www/app
      - UNISON_UID=${APP_UID}
      - UNISON_GID=${APP_GID}
    ports:
      - "5000:5000"
    volumes:
      - app-code:/var/www/app
    restart: always

volumes:
  db-data:
  app-code:
